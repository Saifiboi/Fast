//============================================================================
// Name        : Project.cpp
// Author      : Saif Ur Rehman
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <fstream>
using namespace std;
#include "Patient.h"
#include "Doctor.h"
void writepatient(Patient *P,int size);
Patient *readpatient();
void writeDoctor(Doctor *D,int size);
Doctor * readDoctor();
int main() {
	Doctor D[5]={{1,"d1@123","Dr Shadat",40,"Doctor of Medicine (Neurology)"},{2,"d2@123","Dr Ibadat",50,"Doctor of Medicine (Nephrology)"},{3,"d3@123","Dr Adalat",60,"Doctor of Medicine (Gynecology)"},{4,"d4@123","Dr Riasat",35,"Doctor of Medicine (Urology)"}
	,{5,"d5@123","Dr Sharafat",45,"Clinical psychology"}};
	Patient P[10]={
			{1,"p1@123","Sarfraz Ahmed",40,"Mazdoor",&D[2]},
			{2,"p2@123","Babar Azam",40,"Chaprasi",&D[3]},
			{3,"p3@123","Shadab khan",40,"Mechanic",&D[3]},
			{4,"p4@123","Shaheen Afridi",40,"Carpenter",&D[2]},
			{5,"p5@123","Naseem Shah",40,"Mazdoor",D},
			{6,"p6@123","Iftikhar Ahmed",40,"Chaprasi",&D[2]},
			{7,"p7@123","Muhammad Rizwan",40,"Mechanic",D},
			{8,"p8@123","Fakhar Zaman",40,"Carpenter",&D[4]},
			{9,"p9@123","Imad Wasim",40,"Mazdoor",D},
			{10,"p10@123","Imam-Ul-Haq",40,"Chaprasi",&D[3]}
	};
	writepatient(P,10);
	Patient *P1;
	P1=readpatient();
	//delete []P1;
	writeDoctor(D,5);
	Doctor *D1=readDoctor();
//	delete D1;


}
void writepatient(Patient *P,int size)
{
	ofstream fout;
	fout.open("/home/safi/Documents/Semester2/OOP/Project/objectlists/Patientlist.dat",ios::binary);
	for(int i=0;i<size;i++)
	{
		fout.write(reinterpret_cast<char *>(&P[i]),sizeof(P[i]));
	}
	fout.close();
}
Patient* readpatient()
{
	ifstream fin;
	Patient * P=NULL;
	fin.open("/home/safi/Documents/Semester2/OOP/Project/objectlists/Patientlist.dat",ios::binary);
	if(fin.is_open())
	{
		P=new Patient [10];
		int i=0;
		while(fin.read((char *)(&P[i]),sizeof(P[i])))
		{
			i++;
		}

	}
	fin.close();
	return P;

}
void writeDoctor(Doctor *D,int size)
{
	ofstream fout;
	for(int i=0;i<size;i++)
	{
		fout.write(reinterpret_cast<char *>(&D[i]),sizeof(D[i]));
	}
	fout.close();
}
Doctor  * readDoctor ()
{
	ifstream fin;
	Doctor *D=NULL;
	fin.open("/home/safi/Documents/Semester2/OOP/Project/objectlists/Doctorlist.dat",ios::binary);
	if(fin.is_open())
	{

		D=new Doctor[10];
		int i=0;
		while(fin.read((char *)(&D[i]),sizeof(D[i])))
		{
			i++;
		}
	}
	fin.close();
	return D;

}

