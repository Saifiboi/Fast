#include<string>
#include<iostream>
#include<iomanip>
#include<ctime>
#include"Date.h"
using namespace std;
bool LeapYear(int );
int Daynum(int ,int,int );
string nameMonth(int);
int noDays(int,int);
void Display(int, int );
void printCal();
int main()
{
	int month,year;
	time_t now=time(0);
	tm* localtm=localtime(&now);
	year=1900+localtm->tm_year;
	month=1+localtm->tm_mon;
	Date D(9,5,2022);
	Date D1(1,4,2023);
//	D1-D;
	D1.datebeyoned();

}
bool LeapYear(int year)
{
	if((year)%4==0)
	{
		if(year%100==0)
		{
			if((year)%400==0)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		else
		{
			return 1;
		}
	}
	else
	{
		return 0;
	}
}
int Daynum(int day,int month,int year )
{

	int magicmonth[12]={0,3,3,6,1,4,6,2,5,0,3,5};
	int magicmonthleap[12]={6,2,3,6,1,4,6,2,5,0,3,5};		//magic numbers of months
	int m_num=0;	//month number
	if(LeapYear(year))
	{
		m_num=magicmonthleap[month-1];
	}
	else
	{
		m_num=magicmonth[month-1];
	};
	int yearcen=0;	//year century
	yearcen=year/100;
	int yearmagic[4]={6,4,2,0};	//magic numbers for years
	int y_ind=0;	//year number index
	int y_num=0;	//year number
	y_ind=yearcen%4;
	y_num=yearmagic[y_ind];
	yearcen=year%100;
	int mod4=yearcen/4;
	int sum=day+m_num+y_num+mod4+yearcen;
	return sum%7;

}
string nameMonth(int i)
{
	string month;
	switch(i)
	{
		case 1:
			month="JANUARY";
			break;
		case 2:
			month="FEBRUARY";
			break;
		case 3:
			month="MARCH";
			break;
		case 4:
			month="APRIL";
			break;
		case 5:
			month="MAY";
			break;
		case 6:
			month="JUNE";
			break;
		case 7:
			month="JULY";
			break;
		case 8:
			month="AUGUST";
			break;
		case 9:
			month="SEPTEMBER";
			break;
		case 10:
			month="OCTOBER";
			break;
		case 11:
			month="NOVEMBER";
			break;
		case 12:
			month="DECEMBER";
			break;
	}
	return month;
}
int noDays(int m,int y)
{
	int days;
	switch(m)
	{
	case 1:
		days=31;
		break;
	case 2:
		if(LeapYear(y))
		{
			days=29;
		}
		else
		{
			days=28;
		}
		break;
	case 3:
		days=31;
		break;
	case 4:
		days=30;
		break;
	case 5:
		days=31;
		break;
	case 6:
		days=30;
		break;
	case 7:
		days=31;
		break;
	case 8:
		days=31;
		break;
	case 9:
		days=30;
		break;
	case 10:
		days=31;
		break;
	case 11:
		days=30;
		break;
	case 12:
		days=31;
		break;
	}
	return days;
}
void Display(int month, int year)
{
    string mn = nameMonth(month);
    cout << setw(23) << mn << endl << endl;
    cout << "   Sun  Mon  Tue  Wed  Thu  Fri  Sat\n";

    // get the number of days in the month
    int numDays = noDays(month, year);

    // get the first day of the month
    int firstDay = Daynum(1, month, year);

    // create a 2D array to store the dates in a calendar format
    int calendar[6][7] = {0};	//maximumly a month can lie in 6 weeks.
    int row = 0, col = firstDay;

    for (int day = 1; day <= numDays; day++) {
        calendar[row][col] = day;
        col++;
        if (col > 6) {
            col = 0;
            row++;
        }
    }

    // display the calendar
    for (int i = 0; i < 6; i++) {
        for (int j = 0; j < 7; j++) {
            if (calendar[i][j] == 0) {
                cout << setw(5) << "";
            } else {
                cout << setw(5) << calendar[i][j];
            }
        }
        cout << endl;
    }
}
void printCal()
{
	int year,choice,month;

	cout<<"\nEnter the year you want to print:";
	cin>>year;
	while(year<0)
	{
		cout<<"\nInvalid Input!Year can't be negative try again:";
		cin>>year;
	}
	cout<<"Wanna see full year calender or 1 month(Hit 0 for year and 1 for month):";
	cin>>choice;
	while(choice<0 || choice>1)
	{
		cout<<"\nInvalid choice!Try a valid one:";
		cin>>choice;
	}
	if(choice==1)
	{
		cout<<"\nEnter the number of month for calender:";
		cin>>month;
		while(month<1 || month>12)
		{
			cout<<"\nInvalid Month !Try a valid one:";
			cin>>month;
		}
		Display(month,year);
	}
	else
	{
		cout<<endl<<setw(20)<<"Year:"<<year<<endl;
		for(month=1;month<=12;month++)
		{
			Display(month,year);
			cout<<endl;
		}
	}

}

