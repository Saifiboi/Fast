#include<iostream>
using namespace std;

class S
{
	int s;
public:
	S(int s=0): s(s) {cout<<"H S "<<this->s<<endl;}
	void print()
	{
		cout<<s<<endl;
	}
	~S()
	{
		cout<<"Bye S"<<endl;
	}
};

class A:public S
{
	int a;
public:
	A(int s=0):S(8), a(s) {cout<<"H A "<<a<<endl;}
	void print()
	{
		cout<<a<<endl;
	}
	~A()
	{
		cout<<"Bye A"<<endl;
	}
};

class B: virtual public A
{
	int b;
public:
	B(int n=0):A(9)
	{
		b=n;
		cout<<"HB "<<b<<endl;
	}
	void display()
	{
		cout<<b<<endl;
	}
	~B()
	{
		cout<<"bye B"<<endl;
	}
};

class C:virtual public A
{
	int c;
public:
	C(int n=0)
	{
		c=n;
		cout<<"HC "<<c<<endl;
	}
	void display()
	{
		cout<<c<<endl;
	}
	~C()
	{
		cout<<"bye C"<<endl;
	}
};

class D: public C, public B
{
	int d;
public:
	D(int n=0):C(3),B(2),A(4),S(2)
	{
		d=n;
		cout<<"H D "<<d<<endl;
	}
	void display()
	{
		cout<<d<<endl;
	}
	~D()
	{
		cout<<"bye D"<<endl;
	}
};

int main()
{
	D obj;
//	obj.display();


}
