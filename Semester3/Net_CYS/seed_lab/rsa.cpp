#include <iostream>
#include <openssl/bn.h>
#define NBITS 256
using namespace std;
void printBN(string msg, const BIGNUM *a)
{

    char *number_str = BN_bn2hex(a);
    cout << msg << number_str << endl;
    OPENSSL_free(number_str);
}
int main()
{
    BIGNUM *e = BN_new();
    BIGNUM *n = BN_new();
    BIGNUM *d = BN_new();
    BIGNUM *M = BN_new();
    BIGNUM *S = BN_new();
    BN_CTX *temp = BN_CTX_new();

    BN_hex2bn(&n, "D3487CBEF305865D5BD52F854E4BE086AD15AC61CF5BAF3E6A0A47FB9A7691600B8A6BCDCFDC577E60980BE454D956ED21CC02B65A815F976AEE022F2327B86DD4B0E70602780B1F5CA99936FEBBAC1B05FA57CD81104067D6308B5835D49661BED08C7A979F1AF922E6142FA9C6E8011FABF8260FAC8E4D2C32391D819B8D1C65B21CDB61A8892F60E7EBC24A18C46F2AE9109209ED17D1002BE67DEF0489144E33A1B20F97879FB3A0CD2FBC2CECB88368313D1FD54A9010190B8195D6297651F93676D0B7097A384AD76F8CBF137C39EDBAAE90FC95F77B7809365E74931E25F0FFD4ADAE686BC6FF0FD535F1556E4849F8F8B8EF88F8F15E1177AADF02B3");
    BN_hex2bn(&e, "10001");
    BN_hex2bn(&S, "8f72fc43a52edcbd23f9a1cd1df764da4c32e26fdd5725ecbd1e47ff82828bff3effd2ded1476ed98b943c7ea5d65e0995d14e9cbdfed0616d5da5819c1831fcd2b6dcbdcb7cbb6c826716bb6d058f40169b4fac2add0cc446e590a443f84d57d12a51871ebacb0dcf65ff527a2a85a96db9afece6e0d59e924c974c17125a04ac39bab89faa5f57ee8d6991cd20782fc954a38e2323813ef56ead74098451abd786b6eeb84cb30b6340e5622b52ccd95945c8bd3864a071d9644353c99cdde33798517b4537081cc99bf3918da22f32e33c5172d21eef6e4f2d192663ab80cb0610fefac75a1ca97d92967d7cdf5148b9674d56d01a804e57897b2bdfacd876");
    BN_mod_exp(M, S, e, n, temp);
    printBN("plain = ", M);
}
